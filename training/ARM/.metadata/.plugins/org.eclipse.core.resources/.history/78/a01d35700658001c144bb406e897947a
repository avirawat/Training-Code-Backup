package org.arm.resource.mngt.service;

import java.util.List;
import java.util.Optional;

import org.arm.resource.mngt.entity.Campaign;
import org.arm.resource.mngt.exception.CampaignNotFoundException;
import org.arm.resource.mngt.exception.IDNotFoundException;
import org.arm.resource.mngt.repository.CampaignRepository;
import org.hibernate.ObjectNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class CampaignService implements ICampaignService {
	@Autowired
	CampaignRepository campaignRepository;

	public List<Campaign> getAllCampaign() {
		 List<Campaign> allCampaign= campaignRepository.findAll();
			if(allCampaign.isEmpty()) {
				throw new RuntimeException("no campaign found");
			}
			return allCampaign;

	}

	@Override
	public void createCampaign(Campaign campaign) {
		campaignRepository.save(campaign); 
	}

	@Override
	public Campaign findById(int id) throws ObjectNotFoundException{
		return campaignRepository.findById(id).orElseThrow(() -> new IDNotFoundException("Doctor Id not Found"));
//		Campaign campaignById=campaignRepository.findById(id).get();
//		System.out.println(campaignById);
//		if(campaignById==null) {
//			throw new ObjectNotFoundException("Id not found", null);
//		}
//		return campaignById;
	}
	
	@Override
	public List<Campaign> getAllResourcesCampaignDetails() {
		return campaignRepository.findAllResourcesCampaignDetails();
	}

	@Override
	public List<Campaign> getByRegion(String region) throws CampaignNotFoundException {
		List<Campaign> allCampaignByRegion=campaignRepository.findByRegion(region);
		if(allCampaignByRegion.isEmpty()) {
			throw new CampaignNotFoundException("Region not found");
		}
		return allCampaignByRegion;
	}

}
